name: Protect Critical Files

on:
  push:

jobs:
  check-protected-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full commit history for accurate comparisons

      - name: Identify Commit Range
        id: commits
        run: |
          # Use the GitHub `before` context to determine the base commit
          BASE_COMMIT=${{ github.event.before }}
          echo "Base commit: $BASE_COMMIT"
          echo "HEAD commit: $(git rev-parse HEAD)"
          echo "Commit range: $BASE_COMMIT..HEAD"

          # Expose the base commit for subsequent steps
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV

      - name: Check for Unauthorized Changes
        id: check
        run: |
          # Define the protected files
          PROTECTED_FILES=("package.json" "package-lock.json")

          # Use the base commit from the environment
          COMMIT_RANGE="${BASE_COMMIT}..HEAD"
          echo "Checking commits in range: $COMMIT_RANGE"

          # Fetch the list of modified files
          MODIFIED_FILES=$(git diff --name-only $COMMIT_RANGE)
          echo "Modified files in push: $MODIFIED_FILES"

          # Check if any protected files were modified
          for file in "${PROTECTED_FILES[@]}"; do
              if echo "$MODIFIED_FILES" | grep -q "^$file$"; then
                  echo "Error: Unauthorized modification detected in $file."
                  exit 1
              fi
          done

          echo "All protected files are safe."

      - name: Revert Push if Check Fails
        if: failure()
        run: |
          echo "Reverting all commits in this push..."

          # Reset the branch to the base commit
          git reset --hard ${{ github.event.before }}

          # Force push to revert the branch state
          git push origin HEAD --force

          echo "All commits have been reverted."
