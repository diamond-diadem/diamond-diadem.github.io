name: Protect Critical Files

on:
  push:

jobs:
  check-protected-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch full commit history for accurate comparisons

      - name: Identify Commit Range
        id: commits
        run: |
          BASE_COMMIT=${{ github.event.before }}
          echo "Base commit: $BASE_COMMIT"
          echo "HEAD commit: $(git rev-parse HEAD)"
          echo "Commit range: $BASE_COMMIT..HEAD"
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV

      - name: Check for Unauthorized Changes
        id: check
        run: |
          PROTECTED_FILES=("package.json" "package-lock.json")
          COMMIT_RANGE="${BASE_COMMIT}..HEAD"
          echo "Checking commits in range: $COMMIT_RANGE"
          MODIFIED_FILES=$(git diff --name-only $COMMIT_RANGE)
          echo "Modified files in push: $MODIFIED_FILES"
          for file in "${PROTECTED_FILES[@]}"; do
              if echo "$MODIFIED_FILES" | grep -q "^$file$"; then
                  echo "Error: Unauthorized modification detected in $file."
                  exit 1
              fi
          done
          echo "All protected files are safe."

      - name: Send Email Notification
        if: failure()
        env:
          NOTIFICATION_EMAIL: ${{ secrets.NOTIFICATION_EMAIL }}
        run: |
          echo "Sending email notification to the push creator..."

          # Extract the pusher's email
          PUSHER_EMAIL="${{ github.event.pusher.email }}"
          echo "Pusher email: $PUSHER_EMAIL"

          # Email content
          SUBJECT="Push Rejected: Unauthorized Changes Detected"
          BODY="Hello,\n\nYour push to the repository '${{ github.repository }}' was rejected because it included unauthorized changes to protected files (e.g., package.json or package-lock.json).\n\nPlease review the repository guidelines and adjust your changes before pushing again.\n\nThank you."

          # Send the email using sendmail
          echo -e "Subject: $SUBJECT\n\n$BODY" | sendmail -v -r "${NOTIFICATION_EMAIL}" "$PUSHER_EMAIL"
