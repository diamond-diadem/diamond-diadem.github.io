name: Protect Critical Files

on:
  push:

jobs:
  check-protected-files:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch full commit history for accurate comparisons

      - name: Identify Commit Range
        id: commits
        run: |
          # Use the GitHub `before` context to determine the base commit
          BASE_COMMIT=${{ github.event.before }}
          echo "Base commit: $BASE_COMMIT"
          echo "HEAD commit: $(git rev-parse HEAD)"
          echo "Commit range: $BASE_COMMIT..HEAD"

          # Expose the base commit for subsequent steps
          echo "BASE_COMMIT=$BASE_COMMIT" >> $GITHUB_ENV

      - name: Check for Unauthorized Changes
        id: check
        run: |
          # Define the protected files
          PROTECTED_FILES=("package.json" "package-lock.json")

          # Use the base commit from the environment
          COMMIT_RANGE="${BASE_COMMIT}..HEAD"
          echo "Checking commits in range: $COMMIT_RANGE"

          notify=false
          dependabot=false

          for commit in $(git rev-list $COMMIT_RANGE); do
            message=$(git log -1 --format=%s $commit)
            author=$(git log -1 --format=%an $commit)
            files=$(git diff-tree --no-commit-id --name-only -r $commit)
            for file in "${PROTECTED_FILES[@]}"; do
              if echo "$files" | grep -q "^$file$"; then
                if [[ "$author" =~ ^dependabot ]]; then
                  echo "Allowed Dependabot change in $file for commit $commit ($message)"
                  dependabot=true
                  notify=true
                elif echo "$message" | grep -Eq '^\[upgrade-dependencies\]'; then
                  echo "Allowed change in $file for commit $commit ($message)"
                  notify=true
                else
                  echo "Error: Unauthorized modification detected in $file in commit $commit."
                  exit 1
                fi
              fi
            done
          done

          echo "notify=$notify" >> $GITHUB_OUTPUT
          echo "dependabot=$dependabot" >> $GITHUB_OUTPUT

      - name: Revert Push if Check Fails
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Reverting all commits in this push..."

          # Configure Git to use the GitHub Actions bot
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

          # Reset the branch to the base commit
          git reset --hard ${{ github.event.before }}

          # Force push to revert the branch state using GITHUB_TOKEN
          git push https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} HEAD --force

          echo "All commits have been reverted."

      - name: Send Email Notification
        if: failure()
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtpbv.univ-lyon1.fr
          server_port: 587
          username: ${{secrets.NOTIFY_EMAIL}}
          password: ${{secrets.EMAIL_PASSWORD}}
          subject: "Push rejected - package.json or package-lock.json modified by ${{ github.actor }}"
          to: ${{secrets.NOTIFY_EMAIL}}
          from: Automated email from DIAMOND website
          html_body: "Hello,<br><br>The push by ${{ github.actor }} to the repository '${{ github.repository }}' was rejected because it included unauthorized changes to protected files (package.json and/or package-lock.json)."
          priority: high

      - name: Send Email Notification for Allowed Upgrade
        if: success() && steps.check.outputs.notify == 'true' && steps.check.outputs.dependabot != 'true'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtpbv.univ-lyon1.fr
          server_port: 587
          username: ${{secrets.NOTIFY_EMAIL}}
          password: ${{secrets.EMAIL_PASSWORD}}
          subject: "Dependency update by ${{ github.actor }}"
          to: ${{secrets.NOTIFY_EMAIL}}
          from: Automated email from DIAMOND website
          html_body: "Hello,<br><br>The push by ${{ github.actor }} to repository ${{ github.repository }} modified package.json and/or package-lock.json, using the [upgrade-dependencies] commit prefix."
          priority: normal

      - name: Send Email Notification for Dependabot Upgrade
        if: success() && steps.check.outputs.dependabot == 'true'
        uses: dawidd6/action-send-mail@v4
        with:
          server_address: smtpbv.univ-lyon1.fr
          server_port: 587
          username: ${{secrets.NOTIFY_EMAIL}}
          password: ${{secrets.EMAIL_PASSWORD}}
          subject: "Dependabot update"
          to: ${{secrets.NOTIFY_EMAIL}}
          from: Automated email from DIAMOND website
          html_body: "Hello,<br><br>${{ github.actor }} merged a Dependabot update that modified package.json and/or package-lock.json in repository ${{ github.repository }}."
          priority: normal

